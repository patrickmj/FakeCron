FakeCron allows a plugin to execute tasks periodically without setting up cron on the server.

Based on the PoorMansCron Drupal module: http://drupal.org/project/poormanscron
A small bit of javascript checks whether it's time to run the task and fires it off if so.

Usage:

FakeCron provides an interface called FakeCron_TaskInterface with a method $run

To use FakeCron, implement that interface and provide the run method to perform the needed actions.

class MyPlugin_FakeCronTask implements FakeCron_TaskInterface
{

	public function run($params = null)
	{
		//do whatever the fake cron task needs to do (e.g., import items from a feed)
	}

}

Then, create a new FakeCron_Task, setting the plugin_class property to the name of your implementation.
This might happen in your install() function, or if things are more complicated in a controller or in a
plugin's configuration.
(See FeedImporter for an example of a more complicated situation where each record needs its own task)

// Create a new FakeCron_Task for MyPlugin
$my_plugin_task = new FakeCron_Task();
$my_plugin_task->interval = 0;
$my_plugin_task->name = "My Plugin's Cron Task";
$my_plugin_task->plugin_class = "MyPlugin_FakeCronTask"; //the name of your class implementing FakeCron_TaskInterface
$my_plugin_task->params = null; //optional params to pass to your class's run method
$my_plugin_task->save();

In your uninstall function, remove all the tasks associated with your plugin:

$myPluginTasks = $db->getTable('FakeCron_Task')->findBy(array('plugin_class'=>"MyPlugin_FakeCronTask") );

foreach($myPluginTasks as $myPluginTask){
	$myPluginTask->delete();
}